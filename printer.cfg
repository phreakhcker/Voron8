[mcu]
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_360048000A50315939343520-if00
#restart_method: command
##--------------------------------------------------------------------

[exclude_object]

[include timelapse.cfg]

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 40 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 500
square_corner_velocity: 5.0

[input_shaper]
shaper_freq_x: 57.0
shaper_type_x: zv
shaper_freq_y: 48.2
shaper_type_y: mzv


#[temperature_sensor MCU]
#sensor_type: temperature_mcu

[temperature_sensor SoC]
sensor_type: temperature_host

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
#[stepper_x]
#step_pin: PF13
#dir_pin: PF12
#enable_pin: !PF14
#microsteps: 64
#full_steps_per_rotation:400
#rotation_distance: 40
#endstop_pin: ^PG12
#position_min: 0
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
#homing_speed: 25   #Max 100
#homing_retract_dist: 5
#homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 stepper_x]
#uart_pin: PC4
#interpolate: True
#run_current: 1.0
#hold_current: 0.7
#sense_resistor: 0.110
#stealthchop_threshold: 0

## Y Stepper on Motor2 (A Motor)
#[stepper_y]
#step_pin: PG0
#dir_pin: PG1
#enable_pin: !PF15
#microsteps: 64
#full_steps_per_rotation:400
#rotation_distance: 40
#endstop_pin: ^PG13
#position_min: 0
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
#homing_speed: 25  #Max 100
#homing_retract_dist: 5
#homing_positive_dir: true


#[tmc2209 stepper_y]
#uart_pin: PD11
#interpolate: True
#run_current: 1.0
#hold_current: 0.7
#sense_resistor: 0.110
#stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
endstop_pin: probe:z_virtual_endstop #^PG14
position_max: 340
position_min: -5
homing_speed:15
second_homing_speed: 1
homing_retract_dist: 2


[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.9
#hold_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 0


[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64


[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.9
#hold_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 0


[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64


[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.9
#hold_current: 0.80
sense_resistor: 0.110
#stealthchop_threshold: 0


[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64


[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.9
#hold_current: 0.80
sense_resistor: 0.110
#stealthchop_threshold: 0

#####################################################################
# 	Extruder
#####################################################################

#	E0 on Motor7
#[extruder]
#step_pin: PE2
#dir_pin: !PE3
#enable_pin: !PD4

##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.211642	#Bondtech 5mm Drive Gears
#gear_ratio: 50:10				#BMG Gear Ratio
#microsteps: 16
#full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
#nozzle_diameter: 0.400
#filament_diameter: 1.75
#heater_pin: PA2
#sensor_type: PT1000               #V6 Generic 3950                #PT1000    (Use for Triangle Labs Rapido)                         
#sensor_pin: PF4
#pullup_resistor: 4700
#min_temp: 10
#max_temp: 290
#max_power: 1.0
#min_extrude_temp: 10 #170                               #200   # Standard ( Use 20c when calibrating)
#pressure_advance: 0.040
#pressure_advance_smooth_time: 0.03

#[tmc2209 extruder]
#uart_pin: PE1
#interpolate: false
#run_current: 0.6
#hold_current: 0.4
#sense_resistor: 0.110
#stealthchop_threshold: 0

#[filament_switch_sensor material_0]
#switch_pin: PC1

#[filament_switch_sensor material_1]
#switch_pin: PC2

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 0.75
min_temp: 0
max_temp: 125
pwm_cycle_time: 0.0166

[idle_timeout]
timeout: 36000

[temperature_sensor chamber]
sensor_type: Generic 3950
Sensor_pin: PF5

#[temperature_sensor Toolhead Chamber Temperature]
#sensor_type: Generic 3950
#Sensor_pin: PF6


#####################################################################
# 	Probe
#####################################################################

[probe]
pin: EBBCan: PB5
x_offset: 0
y_offset: 0
#z_offset: 6.42
speed: 50
lift_speed: 50
samples: 1
samples_result: average
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}


[safe_z_home]                 
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:175,175
speed:300
z_hop:15

#####################################################################
# 	Fan Control
#####################################################################

#[fan]
#pin: PA8
#kick_start_time: 0.5
#off_below: 0.10

#[heater_fan hotend_fan]
#pin: PE5
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0

[heater_fan controller_fan]
pin: PD13
kick_start_time: 0.5
heater: heater_bed
heater_temp: 50
fan_speed: .30

#[heater_fan nevermore_fan]
#pin: PA3
#kick_start_time: 0.5
#heater: heater_bed
#heater_temp: 50
#fan_speed: 1.0


[quad_gantry_level]
gantry_corners:
	-60,-10
	410,420
points:
	50,25
	50,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 400
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#######################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE9, EXP1_2=PE10,
    EXP1_3=PE11, EXP1_4=PE12,
    EXP1_5=PE13, EXP1_6=PE14,    
    EXP1_7=PE15, EXP1_8=PB10,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PB14, EXP2_2=PB13,
    EXP2_3=PF7, EXP2_4=PB12,
    EXP2_5=PE7, EXP2_6=PB11,      
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5


[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB


[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

#####################################################################
# BED MESH
#####################################################################

[bed_mesh]
speed: 400
horizontal_move_z: 7
##--------------------------------------------------------------------
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7
mesh_pps: 2,2
algorithm: bicubic
#relative_reference_index: 24


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
  STATUS_LEVELING
  G28
	BED_MESH_CLEAR
	QUAD_GANTRY_LEVEL
	G28 Z
	

[include stealthburner_leds.cfg]

[include purge_bucket_scrubber.cfg]

[include CanBus SB 2209.cfg]

[include PITB.cfg]

[include config_backup.cfg]

[include macros.cfg]

#[include adxl.cfg]

   
[gcode_macro PRINT_START]
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:		
	# Parameters
	{% set bed = params.BED|int %}
	{% set hotend = params.HOTEND|int %}
	{% set chamber = params.CHAMBER|default(0)|int %}

	# Set the parameters as persistent variables so they can be referenced outside of the macro (in PRINT_END)
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}	
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend}	
	SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}	
	
	UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=0  													; cancel exhaust off timer (if there is one)
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0      												; cancel off timer (if there is one)
	SET_PIN PIN=caselight VALUE=1																		; turn on case light
	RESETSPEEDS																							; reset speed, accel etc to configured values
	#RESETRGB																							; reset LCD RGB
	M104 S140																							; set hotend to no-ooze temp
	M140 S{bed}																							; set bed to target temp
	G28																									; home
	G90																									; absolute positioning
	{% if printer["temperature_sensor chamber"].temperature < chamber %}								; - if chamber is not at temp yet:
		HEATSOAK T={bed} MOVE=1																			; 	heatsoak macro + park in center
		M190 S{bed} 																					; 	wait for bed final temp
		TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}							; 	wait for chamber final temp
	{% else %}																							; - if chamber is already at temp:
		{% if printer.heater_bed.temperature < (bed-2) %}												; -- but bed is not fully heated (within 2C):
			HEATSOAK T={bed} MOVE=1																		; 		heatsoak and park
			M190 S{bed} 																				; 		wait for bed final temp
		{% else %}																						; -- and bed is already heated:
			HEATSOAK T={bed} MOVE=0																		; 		"heatsoak" without parking (only still calling this because it does some other things like turn off exahaust fan)
		{% endif %}
	{% endif %}	
	M106 S0																								; turn off part cooling fan (from heatsoak)
	BED_MESH_CLEAR																						; clear bed mesh
	#ATTACH_PROBE_LOCK																					; attach klicky + lock
	QUAD_GANTRY_LEVEL																					; quad gantry level
	G28 Z																								; home z
	G90 													 											; absolute positioning
	G0 Z20																								; hop up to prevent knocking probe off after homing Z
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F19500					; move to center of bed to prevent knocking probe off after homing Z (otherwise QGL just moves our Z hop down again before traveling)
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE																					; mesh
	G28 Z																								; home z again
	G0 Z20																								; hop up to prevent knocking probe off after homing Z
	#DOCK_PROBE_UNLOCK																					; stow probe, unlock
	G0 X125 Z10 Y{printer.toolhead.axis_maximum.y} F19500												; move to right of nozzle brush
	M109 S{hotend} 																						; set & wait for hotend final temp
	CLEAN_NOZZLE																							; clean nozzle while hot
	#TEMPADJUSTPA																						; change PA based on bed temp
	#CALIBRATE_Z																							; calibrate z offset with hot nozzle
	SWIPENOZZLE																							; swipe nozzle brush on way to print purge line
	#SET_FAN_SPEED FAN=Exhaust SPEED=0.1																	; set chamber fan to 10%
	G92 E0                              																; reset Extruder
	G1 X0 Y20 Z0.3 F19500.0           																	; move to start position
	G1 X0 Y200.0 Z0.3 F1500.0 E15     																	; draw the first line
	G92 E0                              																; reset Extruder
	G1 Z2.0 F3000                       																; move Z Axis up
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1						   #DISABLED TEMP!!!							; enable filament sensor


[gcode_macro PRINT_END]
gcode:
	#RESETRGB																							; revert LCD RGB
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0													; disable filament sensor
	CLEAR_PAUSE																							; clear pause (from M191) if there is one
	#{% if printer.heater_bed.temperature >= 100 %}												
	#	SET_FAN_SPEED FAN=Exhaust SPEED=1  																; crank exhaust fan to 100% to evacuate chamber
	#{% endif %}													
	M400                         	   																	; wait for buffer to clear
	G92 E0                        	    																; zero the extruder
	M104 S0						 	    			 													; turn only the hotend off
	M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}												; return the bed to temp, some slicers like to turn it off
    M107                         	   			 	 													; turn off part cooling fan
	G91                             							 										; relative positioning
    G1 Z5 F3000                  	    			 													; move nozzle up 5mm
    G90                           	    			 													; absolute positioning
	G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0  					; park nozzle at rear
	BED_MESH_CLEAR																						; clear bed mesh									
	KEILAS_HOMING_METHOD
	#UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=120													; turn exhaust off in 2 min
	#UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=1800	 												; turn everything off in 30 min
	RESETSPEEDS																							; reset speed, accel etc to configured max values
	#SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0														; disable XYE steppers (not z)
    #SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
    #SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
	#BEEP I=3	
	
[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1


[gcode_macro SWIPENOZZLE]
gcode:
	CG28
	SAVE_GCODE_STATE NAME=SWIPENOZZLE
	G90																; absolute positioning
	G0 X121 Z10 Y{printer.toolhead.axis_maximum.y} F19500 			; move to right of nozzle brush
	G0 Z3	F19500													; lower
	G0 X84 F2400													; wipe back
	G0 Z10	F19500													; raise
	RESTORE_GCODE_STATE NAME=SWIPENOZZLE
	
[gcode_macro HEATSOAK]
gcode:
	# Parameters
	{% set t = params.T|default(110)|int %}
	{% set move = params.MOVE|default(1)|int %}

	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0  ; cancel off timer (if there is one)
	SET_FAN_SPEED FAN=Exhaust SPEED=0		 		; turn off exhaust fan
	SET_PIN PIN=caselight VALUE=1					; turn on case light
	M140 S{t}										; heat bed
	{% if t >= 100 %}
		M104 S180									; set hotend to no-ooze temp
		M106 S205 									; turn on part fan (80%)
	{% else %}
		M106 S0 									; turn part fan off
	{% endif %}
	{% if move == 1 %}
		CG28										; conditional home
		PARKCENTER						 			; move to bed
	{% endif %}

[gcode_macro OFF]
gcode:
	M84												; turn steppers off
    TURN_OFF_HEATERS								; turn bed / hotend off
    M107                         	   			 	; turn print cooling fan off
	SET_FAN_SPEED FAN=Exhaust SPEED=0  				; turn exhaust fan off
	SET_FAN_SPEED FAN=BedOuter SPEED=0				; bed fan off
	SET_FAN_SPEED FAN=BedInner SPEED=0				; bed fan off
	SET_PIN PIN=caselight VALUE=0					; turn light off


[gcode_macro QGL]
gcode:
	BED_MESH_CLEAR
	QUAD_GANTRY_LEVEL
	
[gcode_macro BMC]
gcode:
	BED_MESH_CALIBRATE

[gcode_macro M109]
rename_existing: M99109
gcode:
	#Parameters
	{% set s = params.S|float %}
	
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+5}

[gcode_macro SETPA]
gcode:
	# Parameters
	{% set pa = params.PA|default(0)|float %}

	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro SETPASMOOTH]
gcode:
	# Parameters
	{% set smooth = params.SMOOTH|default(0)|float %}
	
	SET_PRESSURE_ADVANCE SMOOTH_TIME={smooth}


   
[delayed_gcode DISABLEFILAMENTSENSOR]	
initial_duration: 1
gcode:
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro Change_Filament]
description: Move toolhead to good location to change filament and perform maintenance
gcode:
    G0  Z169.0 X230.0 Y150.0 F3600

[gcode_macro RESETSPEEDS]
gcode:
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
	SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
	SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro RESETSPEEDS]
gcode:
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
	SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
	SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro RESETRGB]
gcode:
	SET_LED LED=lcd RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
	SET_LED LED=lcd RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
	SET_LED LED=lcd RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

[delayed_gcode EXHAUST_OFF]
gcode:
	SET_FAN_SPEED FAN=Exhaust SPEED=0

[delayed_gcode DELAYED_OFF]
gcode:
	OFF  


[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[pause_resume]

[display_status]

[virtual_sdcard]
#path: ~/gcode_files
path: /home/pi/printer_data/gcodes

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

#[filament_switch_sensor filament_sensor]
##	Connected to Z+ on mcu_xye
#pause_on_runout: TRUE
#runout_gcode: 
#	M600
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#switch_pin: PG11


[output_pin caselight]
pin: PD12
#max_power: 1.0
#kick_start_time: 0.5
pwm: true
shutdown_value: 0
value: 1
cycle_time: 0.01
#scale: 100

[gcode_macro lights_off]
gcode:
    SET_PIN PIN=caselight VALUE=0

[gcode_macro lights_on]
gcode:
    SET_PIN PIN=caselight VALUE=100

[gcode_macro lights_toggle]
gcode:
    {% if printer["output_pin caselight"].value == 100 %}
        lights_off
    {% else %}
        lights_on
    {% endif %}
    
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa} 

[filament_motion_sensor filament_sensor]
detection_length: 12
extruder: extruder
switch_pin: ^PG6
pause_on_runout: True
event_delay: 3.0
pause_delay: 0.5
runout_gcode:
    M117 Runout Detected!

#runout_gcode: M600

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#s_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    175,175,20

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 51.980
#*# pid_ki = 1.318
#*# pid_kd = 512.649
#*# idle_timeout = 2700
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.103
#*# pid_ki = 2.262
#*# pid_kd = 69.660
#*# idle_timeout = 2700
#*#
#*# [stepper_z]
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 7
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [probe]
#*# z_offset = -0.65                #-0.71
